name: Cross-Platform Test

on:
  workflow_dispatch:
  pull_request:

env:
  METACALL_BASE_IMAGE: debian:bullseye-slim

jobs:
  linux-test:
    name: Linux (Ubuntu) GCC Test
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      # Revert the NodeJS version in order to use the system one instead (needed due to libnode)
      - name: Delete latest version of NodeJS
        run: yes | sudo n uninstall

      - name: Set up the environment
        run: sudo ./tools/metacall-environment.sh $METACALL_INSTALL_OPTIONS
        env:
          METACALL_PATH:               /usr/local/metacall
          METACALL_BUILD_TYPE:         debug # relwithdebinfo
          DEBIAN_FRONTEND:             noninteractive
          LTTNG_UST_REGISTER_TIMEOUT:  0
          NUGET_XMLDOC_MODE:           skip
          DOTNET_CLI_TELEMETRY_OPTOUT: 'true'
          METACALL_INSTALL_OPTIONS: root base python ruby netcore5 nodejs typescript file rpc wasm java c cobol rapidjson funchook swig pack # clangformat v8rep51 coverage

      - name: Run the configuration script
        run: |
          export "METACALL_PATH=$(pwd)"
          export "LOADER_LIBRARY_PATH=$METACALL_PATH/build"
          export "LOADER_SCRIPT_PATH=$METACALL_PATH/build/scripts"
          export "CONFIGURATION_PATH=$METACALL_PATH/build/configurations/global.json"
          export "SERIAL_LIBRARY_PATH=$METACALL_PATH/build"
          export "DETOUR_LIBRARY_PATH=$METACALL_PATH/build"
          export "PORT_LIBRARY_PATH=$METACALL_PATH/build"
          mkdir -p build
          cd "$METACALL_PATH/build"
          sudo "$METACALL_PATH/tools/metacall-configure.sh" $METACALL_BUILD_OPTIONS
        env:
          METACALL_BUILD_TYPE:         debug
          METACALL_BUILD_OPTIONS:      root python ruby netcore5 nodejs typescript file rpc wasm java c cobol examples tests scripts ports dynamic install pack benchmarks # sanitizer v8 coverage
          DEBIAN_FRONTEND:             noninteractive
          NODE_PATH:                   /usr/lib/node_modules
          DOTNET_CLI_TELEMETRY_OPTOUT: 'true'

      - name: Set up the runtime
        run: |
          export "METACALL_PATH=$(pwd)"
          sudo mkdir -p /usr/local/scripts
          sudo ./tools/metacall-runtime.sh $METACALL_RUNTIME_OPTIONS
        env:
          METACALL_RUNTIME_OPTIONS:     root base python ruby nodejs typescript file rpc ports clean # v8
          METACALL_BUILD_TYPE:          debug # relwithdebinfo
          LOADER_LIBRARY_PATH:          /usr/local/lib
          LOADER_SCRIPT_PATH:           /usr/local/scripts
          CONFIGURATION_PATH:           /usr/local/share/metacall/configurations/global.json
          SERIAL_LIBRARY_PATH:          /usr/local/lib
          DETOUR_LIBRARY_PATH:          /usr/local/lib
          PORT_LIBRARY_PATH:            /usr/local/lib
          DEBIAN_FRONTEND:              noninteractive
          NODE_PATH:                    /usr/local/lib/node_modules
          LTTNG_UST_REGISTER_TIMEOUT:   0
          NUGET_XMLDOC_MODE:            skip
          DOTNET_CLI_TELEMETRY_OPTOUT: 'true'

      - name: Build the CLI
        run: |
          export "METACALL_PATH=$(pwd)"
          cd build && make pack
        env:
          METACALL_BUILD_TYPE:         debug # relwithdebinfo
          LOADER_LIBRARY_PATH:         /usr/local/lib 
          LOADER_SCRIPT_PATH:          /usr/local/scripts 
          CONFIGURATION_PATH:          /usr/local/share/metacall/configurations/global.json 
          SERIAL_LIBRARY_PATH:         /usr/local/lib 
          DETOUR_LIBRARY_PATH:         /usr/local/lib 
          PORT_LIBRARY_PATH:           /usr/local/lib 
          DEBIAN_FRONTEND:             noninteractive 
          NODE_PATH:                   /usr/local/lib/node_modules 
          DOTNET_CLI_TELEMETRY_OPTOUT: 'true'
          LTTNG_UST_REGISTER_TIMEOUT:  0
          NUGET_XMLDOC_MODE:           skip
          ARTIFACTS_PATH:              ./build-artifacts
