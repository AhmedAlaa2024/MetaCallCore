# List of supressions for thread sanitizer
#
# IMPORTANT: Do NOT add blank lines between the script,
# it seems that gcc sanitizer does not support that.
#
# At this point there are data races from the runtimes but
# I am not sure all of them are due to metacall (probably
# some of them are due to race conditions but not all of them).
# We disable them until we debug those cases (if any) in depth.
#
#
# Python
#
#called_from_lib:libpython*
#
# NodeJS
#
race:v8::platform::tracing::TracingController::GetCategoryGroupEnabled
race:v8::platform::DefaultJobWorker::~DefaultJobWorker
race:v8::platform::DefaultJobState::~DefaultJobState
race:v8::internal::ScavengerCollector::JobTask::~JobTask
race:heap::base::Worklist<std::pair<v8::internal::HeapObject, int>, (unsigned short)256>::Local::Pop(std::pair<v8::internal::HeapObject, int>*)
#
# Ruby
#
#called_from_lib:libruby*
#
# DotNet Core
#
called_from_lib:libcoreclr*
called_from_lib:libclrjit*
#
# Java
#
called_from_lib:libjvm*
#
# WASM (TODO: This must be reviewed, probably it's a false positive)
#
called_from_lib:libwasmtime*
#
# C
#
mutex:clang_install_aborting_llvm_fatal_error_handler
mutex:libclang-*
#
# Rust
#
race:libLLVM*
race:librustc_driver-*
race:libstd-*